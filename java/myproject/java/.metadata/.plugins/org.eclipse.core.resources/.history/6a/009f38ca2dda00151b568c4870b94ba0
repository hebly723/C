//Fig. 7.10:DeckOfCard.java
//DeckOfCard class represents a deck of playing cards
package cn.com.dick.seven.five;
import java.util.Random;

public class DeckOfCard 
{
	private Card deck[];//array of Card objects
	private int currentCard;//index of next Card to be dealt
	private final int NUMBER_OF_CARDS = 52;//constant number of Cards
	private Random randomNumber;//randomNumber generator
	
	//constructor fills deck of cards
	public DeckOfCard()
	{
		String faces[] = {"Ace", "Deuce", "Three", "Four", "Five", "Six",
						  "Seven", "Eight", "Nine", "Ten", "Jack",
						  "Queen", "King"};
		String suits[] = {"Heart", "Diamond", "Clubs", "Spades"};
		
		deck = new Card[NUMBER_OF_CARDS];//create array of Card objects
		currentCard = 0;//set currentCard so first Card dealt is deck[0]
		randomNumber = new Random();//create random number generator
		
		//populate deck with Card objects
		for (int count = 0; count < deck.length; count++) 
		{
			deck[count] = new Card( faces[ count % 13 ], suits[ count / 13 ] );
		}//end DeckOfCard constructor
		
	}
	//count card in the desk
	public void countCard( int number, int once)
	{
		String faces[] = {"Ace", "Deuce", "Three", "Four", "Five", "Six",
				  "Seven", "Eight", "Nine", "Ten", "Jack",
				  "Queen", "King"};
		//create an array to obtain number
		int cardFace[] = new int[13];
		
		Card onceCard[] = new Card[once]; 
		//divide cards by number
		for (int i = 0; i < once; i++) 
		{	
			onceCard[i] = this.dealCard();
			
			cardFace[onceCard[i].compareFace()-1]++;
			
			System.out.printf("%-20s",onceCard[i]);
		}
		//judge
		for (int i = 0; i < cardFace.length; i++) {
			if(cardFace[i] == number)
				System.out.printf("\nnumber of %s is %d", faces[i], number);
		}

	}
	//shuffle deck of Cards with one-pass algorithm
	public void shuffle()
	{
		//after shuffling, dealing should start at deck[0] again
		currentCard = 0;//reinitialize currentCard
		
		//for each Card, pick another random Card and swap them
		for (int first = 0; first < deck.length; first++) 
		{
			//select a random number between 0 and 51
			int second = randomNumber.nextInt(NUMBER_OF_CARDS);
			
			//swap current Card with randomly selected Card
			Card temp = deck[first];
			deck[first] = deck[second];
			deck[second] = temp;
			
		}//end for
		
	}//end method shuffle
	
	//deal one Card
	public Card dealCard()
	{
		//determined whether Card remain to be dealt
		if (currentCard<deck.length)
			return deck[currentCard++];//return Card in array
		else
			return null;//return null to indicate that all Cards were dealt
	}//end method dealCard
	
	

}//end class DeckOfCard
